/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.generated.tables.JFilmCategory;
import org.jooq.generated.tables.pojos.FilmCategory;
import org.jooq.generated.tables.records.FilmCategoryRecord;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class FilmCategoryDao extends DAOImpl<FilmCategoryRecord, FilmCategory, Record2<UInteger, UInteger>> {

    /**
     * Create a new FilmCategoryDao without any configuration
     */
    public FilmCategoryDao() {
        super(JFilmCategory.FILM_CATEGORY, FilmCategory.class);
    }

    /**
     * Create a new FilmCategoryDao with an attached configuration
     */
    public FilmCategoryDao(Configuration configuration) {
        super(JFilmCategory.FILM_CATEGORY, FilmCategory.class, configuration);
    }

    @Override
    public Record2<UInteger, UInteger> getId(FilmCategory object) {
        return compositeKeyRecord(object.getFilmId(), object.getCategoryId());
    }

    /**
     * Fetch records that have <code>film_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<FilmCategory> fetchRangeOfFilmId(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(JFilmCategory.FILM_CATEGORY.FILM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>film_id IN (values)</code>
     */
    public List<FilmCategory> fetchByFilmId(UInteger... values) {
        return fetch(JFilmCategory.FILM_CATEGORY.FILM_ID, values);
    }

    /**
     * Fetch records that have <code>category_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<FilmCategory> fetchRangeOfCategoryId(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(JFilmCategory.FILM_CATEGORY.CATEGORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category_id IN (values)</code>
     */
    public List<FilmCategory> fetchByCategoryId(UInteger... values) {
        return fetch(JFilmCategory.FILM_CATEGORY.CATEGORY_ID, values);
    }

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<FilmCategory> fetchRangeOfLastUpdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JFilmCategory.FILM_CATEGORY.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<FilmCategory> fetchByLastUpdate(LocalDateTime... values) {
        return fetch(JFilmCategory.FILM_CATEGORY.LAST_UPDATE, values);
    }
}
